Description:
 Fix resource exhaustion due to sessions stuck in LAST_ACK state. [SA-15:13] (CVE-2015-5358)
Origin: vendor, https://security.FreeBSD.org/patches/SA-15:13/tcp.patch
Bug: https://www.freebsd.org/security/advisories/FreeBSD-SA-15:13.tcp.asc
Applied-Upstream: https://svnweb.freebsd.org/base?view=revision&revision=285780

--- a/sys/netinet/tcp_output.c	(revision 285779)
+++ b/sys/netinet/tcp_output.c	(revision 285780)
@@ -400,7 +400,7 @@
 		flags &= ~TH_FIN;
 	}
 
-	if (len < 0) {
+	if (len <= 0) {
 		/*
 		 * If FIN has been sent but not acked,
 		 * but we haven't been called to retransmit,
@@ -410,9 +410,16 @@
 		 * to (closed) window, and set the persist timer
 		 * if it isn't already going.  If the window didn't
 		 * close completely, just wait for an ACK.
+		 *
+		 * We also do a general check here to ensure that
+		 * we will set the persist timer when we have data
+		 * to send, but a 0-byte window. This makes sure
+		 * the persist timer is set even if the packet
+		 * hits one of the "goto send" lines below.
 		 */
 		len = 0;
-		if (sendwin == 0) {
+		if ((sendwin == 0) && (TCPS_HAVEESTABLISHED(tp->t_state)) &&
+			(off < (int) so->so_snd.sb_cc)) {
 			tcp_timer_activate(tp, TT_REXMT, 0);
 			tp->t_rxtshift = 0;
 			tp->snd_nxt = tp->snd_una;
