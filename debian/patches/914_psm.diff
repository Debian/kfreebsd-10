This patch fixes PS/2 mouse support with xserver-xorg-input-mouse 1.4.0.
It is a revert of upstream commit r18970:

| Teach psm about O_ASYNC
| 
| This makes Xorg happy if you aren't using moused.

Index: kfreebsd-10/sys/dev/atkbdc/psm.c
===================================================================
--- kfreebsd-10.orig/sys/dev/atkbdc/psm.c
+++ kfreebsd-10/sys/dev/atkbdc/psm.c
@@ -70,10 +70,7 @@ __FBSDID("$FreeBSD$");
 #include <sys/module.h>
 #include <sys/bus.h>
 #include <sys/conf.h>
-#include <sys/filio.h>
 #include <sys/poll.h>
-#include <sys/sigio.h>
-#include <sys/signalvar.h>
 #include <sys/syslog.h>
 #include <machine/bus.h>
 #include <sys/rman.h>
@@ -338,7 +335,6 @@ struct psm_softc {		/* Driver status inf
 	struct cdev	*bdev;
 	int		lasterr;
 	int		cmdcount;
-	struct sigio	*async;		/* Processes waiting for SIGIO */
 	int		extended_buttons;
 };
 static devclass_t psm_devclass;
@@ -1580,7 +1576,6 @@ psmopen(struct cdev *dev, int flag, int
 	sc->mode.level = sc->dflt_mode.level;
 	sc->mode.protocol = sc->dflt_mode.protocol;
 	sc->watchdog = FALSE;
-	sc->async = NULL;
 
 	/* flush the event queue */
 	sc->queue.count = 0;
@@ -1721,12 +1716,6 @@ psmclose(struct cdev *dev, int flag, int
 	/* remove anything left in the output buffer */
 	empty_aux_buffer(sc->kbdc, 10);
 
-	/* clean up and sigio requests */
-	if (sc->async != NULL) {
-		funsetown(&sc->async);
-		sc->async = NULL;
-	}
-
 	/* close is almost always successful */
 	sc->state &= ~PSM_OPEN;
 	kbdc_lock(sc->kbdc, FALSE);
@@ -2288,15 +2277,6 @@ psmioctl(struct cdev *dev, u_long cmd, c
 		break;
 #endif /* MOUSE_GETHWID */
 
-	case FIONBIO:
-	case FIOASYNC:
-		break;
-	case FIOSETOWN:
-		error = fsetown(*(int *)addr, &sc->async);
-		break;
-	case FIOGETOWN:
-		*(int *) addr = fgetown(&sc->async);
-		break;
 	default:
 		return (ENOTTY);
 	}
@@ -3646,9 +3626,6 @@ next:
 		wakeup(sc);
 	}
 	selwakeuppri(&sc->rsel, PZERO);
-	if (sc->async != NULL) {
-		pgsigio(&sc->async, SIGIO, 0);
-	}
 	sc->state &= ~PSM_SOFTARMED;
 	splx(s);
 }
